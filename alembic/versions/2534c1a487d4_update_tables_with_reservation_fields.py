"""update tables with reservation fields

Revision ID: 2534c1a487d4
Revises: 
Create Date: 2025-04-01 18:08:26.104001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2534c1a487d4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('modifier_categories')
    op.drop_table('order_item_modifiers')
    op.drop_table('ayce_sessions')
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.drop_column('categories', 'description')
    op.alter_column('menu_item_modifiers', 'menu_item_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('menu_item_modifiers', 'modifier_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('idx_menu_items_category', table_name='menu_items')
    op.create_index(op.f('ix_menu_items_id'), 'menu_items', ['id'], unique=False)
    op.add_column('modifiers', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('modifiers', sa.Column('is_available', sa.Boolean(), nullable=True))
    op.add_column('modifiers', sa.Column('display_order', sa.Integer(), nullable=False))
    op.add_column('modifiers', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('modifiers', 'name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.create_index(op.f('ix_modifiers_id'), 'modifiers', ['id'], unique=False)
    op.drop_index('idx_order_items_menu_item', table_name='order_items')
    op.drop_index('idx_order_items_order', table_name='order_items')
    op.drop_index('idx_order_items_status', table_name='order_items')
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.drop_column('order_items', 'status')
    op.drop_column('order_items', 'ayce_order')
    op.drop_index('idx_orders_status', table_name='orders')
    op.drop_index('idx_orders_table', table_name='orders')
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.drop_column('orders', 'server_id')
    op.drop_column('orders', 'price')
    op.add_column('tables', sa.Column('number', sa.Integer(), nullable=False))
    op.add_column('tables', sa.Column('capacity', sa.Integer(), nullable=False))
    op.add_column('tables', sa.Column('status', sa.String(length=20), nullable=False))
    op.add_column('tables', sa.Column('reservation_time', sa.DateTime(timezone=True), nullable=True))
    op.add_column('tables', sa.Column('party_size', sa.Integer(), nullable=True))
    op.add_column('tables', sa.Column('customer_name', sa.String(length=100), nullable=True))
    op.add_column('tables', sa.Column('customer_phone', sa.String(length=20), nullable=True))
    op.add_column('tables', sa.Column('notes', sa.Text(), nullable=True))
    op.add_column('tables', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_constraint('tables_table_number_key', 'tables', type_='unique')
    op.create_index(op.f('ix_tables_id'), 'tables', ['id'], unique=False)
    op.create_unique_constraint(None, 'tables', ['number'])
    op.drop_column('tables', 'is_active')
    op.drop_column('tables', 'seats')
    op.drop_column('tables', 'table_number')
    op.drop_column('tables', 'ayce_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tables', sa.Column('ayce_active', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.add_column('tables', sa.Column('table_number', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.add_column('tables', sa.Column('seats', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('tables', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tables', type_='unique')
    op.drop_index(op.f('ix_tables_id'), table_name='tables')
    op.create_unique_constraint('tables_table_number_key', 'tables', ['table_number'])
    op.drop_column('tables', 'updated_at')
    op.drop_column('tables', 'notes')
    op.drop_column('tables', 'customer_phone')
    op.drop_column('tables', 'customer_name')
    op.drop_column('tables', 'party_size')
    op.drop_column('tables', 'reservation_time')
    op.drop_column('tables', 'status')
    op.drop_column('tables', 'capacity')
    op.drop_column('tables', 'number')
    op.add_column('orders', sa.Column('price', sa.NUMERIC(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('server_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.create_index('idx_orders_table', 'orders', ['table_id'], unique=False)
    op.create_index('idx_orders_status', 'orders', ['status'], unique=False)
    op.add_column('order_items', sa.Column('ayce_order', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.add_column('order_items', sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.create_index('idx_order_items_status', 'order_items', ['status'], unique=False)
    op.create_index('idx_order_items_order', 'order_items', ['order_id'], unique=False)
    op.create_index('idx_order_items_menu_item', 'order_items', ['menu_item_id'], unique=False)
    op.drop_index(op.f('ix_modifiers_id'), table_name='modifiers')
    op.alter_column('modifiers', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('modifiers', 'updated_at')
    op.drop_column('modifiers', 'display_order')
    op.drop_column('modifiers', 'is_available')
    op.drop_column('modifiers', 'description')
    op.drop_index(op.f('ix_menu_items_id'), table_name='menu_items')
    op.create_index('idx_menu_items_category', 'menu_items', ['category_id'], unique=False)
    op.alter_column('menu_item_modifiers', 'modifier_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('menu_item_modifiers', 'menu_item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('categories', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.alter_column('categories', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.create_table('ayce_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('price_per_person', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('number_of_people', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='ayce_sessions_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ayce_sessions_pkey')
    )
    op.create_table('order_item_modifiers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('modifier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_adjustment', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0.00'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['modifier_id'], ['modifiers.id'], name='order_item_modifiers_modifier_id_fkey'),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_items.id'], name='order_item_modifiers_order_item_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_item_modifiers_pkey')
    )
    op.create_table('modifier_categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('modifier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='modifier_categories_category_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['modifier_id'], ['modifiers.id'], name='modifier_categories_modifier_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='modifier_categories_pkey'),
    sa.UniqueConstraint('modifier_id', 'category_id', name='modifier_categories_modifier_id_category_id_key')
    )
    # ### end Alembic commands ###
